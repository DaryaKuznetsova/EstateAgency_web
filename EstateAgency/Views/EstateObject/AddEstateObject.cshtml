@using EstateAgency.ViewModel;

@model EstateObjectViewModel

@{
    ViewBag.Title = "AddEstateObject";
    Layout = "~/Views/Shared/_LayoutManager.cshtml";
}

<h2>Создание объекта недвижимости</h2>
<h3>@Model.RealtyType</h3>

@using (Html.BeginForm())
{
<div class="form-horizontal">

    <div class="form-group">
        @Html.LabelFor(model => model.TradeType, "Вид сделки", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TradeTypeId, Model.TradeTypes as List<SelectListItem>, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TradeType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.District, "Район", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DistrictId, Model.Districts as List<SelectListItem>, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Owner, "Владелец", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.OwnerId, Model.Owners as List<SelectListItem>, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Model.RealtyTypeId == 1 || Model.RealtyTypeId == 3)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Rooms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rooms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rooms, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.RealtyTypeId == 3)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.LandDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LandDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LandDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LandArea, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LandArea, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LandArea, "", new { @class = "text-danger" })
            </div>
        </div>
    }

</div>

    @Html.HiddenFor(model => model.RealtyTypeId)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Создать" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад", "StartAddEstateObject")
</div>


